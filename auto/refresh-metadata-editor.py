#!/usr/bin/env python3

import argparse
from pathlib import Path
import os
import sys

PLUGIN_REPO = 'https://github.com/overview/overview-plugin-metadata'
DEBUG = True

def eprint(*args, **kwargs):
    if DEBUG:
        print(*args, file=sys.stderr, **kwargs)

def debug(*args, **kwargs):
    eprint(*args, **kwargs)

def error(message):
    eprint('ERROR: %s' % message)
    eprint('')
    eprint('Here is how to run this program if you keep code in ~/src:')
    eprint('')
    eprint('1. cd ~/src && git clone %s.git' % PLUGIN_REPO)
    eprint('2. cd ~/src/overview-server')
    eprint('3. auto/refresh-metadata-editor.py ~/src/overview-plugin-metadata')
    sys.exit(1)

def get_overview_dirname():
    ret = os.path.dirname(os.path.dirname(__file__))
    if ret == '':
        return './web'
    else:
        return ret + '/web'

def check_plugin_dirname(plugin_dirname):
    for path in [ 'assets/javascripts/view.js', 'assets/stylesheets/view.scss' ]:
        if not os.path.exists(plugin_dirname + '/' + path):
            error('Directory %s is missing %s. Please point at a valid overview-plugin-metadata checkout.' % (plugin_dirname, path))

def copy_js(plugin_dirname, overview_dirname):
    plugin_path = 'assets/javascripts/view.js'
    overview_path = 'js/apps/CurrentDocumentMetadata/view.js'

    debug('cp %s/%s %s/%s (modifying as we go)' % (plugin_dirname, plugin_path, overview_dirname, overview_path))

    data = Path(plugin_dirname + '/' + plugin_path).read_bytes()

    # Wrap the whole thing
    data = (b'// DO NOT EDIT. This was auto-generated by auto/refresh-metadata-editor.py.\n\n'
            + data
            + b'\n\n// reminder: DO NOT EDIT')

    Path(overview_dirname + '/' + overview_path).write_bytes(data)

def copy_css(plugin_dirname, overview_dirname):
    plugin_path = 'assets/stylesheets/view.scss'
    overview_path = 'app/assets/stylesheets/overview-plugin-metadata-app.less'

    debug('cp %s/%s %s/%s (converting from scss to less)' % (plugin_dirname, plugin_path, overview_dirname, overview_path))

    data = Path(plugin_dirname + '/' + plugin_path).read_bytes()

    # Change variable references to start with '@', as in Less
    data = data.replace(b'$', b'@')

    # Wrap the whole thing
    data = (b'// DO NOT EDIT. This was auto-generated by auto/refresh-metadata-editor.py.\n\n'
            + data
            + b'\n\n// reminder: DO NOT EDIT'
           )

    Path(overview_dirname + '/' + overview_path).write_bytes(data)

def run(plugin_dirname):
    overview_dirname = get_overview_dirname()

    check_plugin_dirname(plugin_dirname)

    copy_js(plugin_dirname, overview_dirname)
    copy_css(plugin_dirname, overview_dirname)

def main():
    parser = argparse.ArgumentParser(description='Copy (and tweak) metadta editor into this repository')
    parser.add_argument('dirname', metavar='DIRNAME', type=str,
                        help=('a local clone of %s.git' % PLUGIN_REPO))
    args = parser.parse_args()
    namespace = parser.parse_args()
    run(namespace.dirname)

if __name__ == '__main__':
    main()
