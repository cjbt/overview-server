#!/bin/bash

: ${SMTP_USERNAME?You must set SMTP_USERNAME and SMTP_PASSWORD}
: ${SMTP_PASSWORD?You must set SMTP_USERNAME and SMTP_PASSWORD}
: ${MAILCHIMP_LIST_ID?You must set MAILCHIMP_LIST_ID and MAILCHIMP_API_KEY}
: ${MAILCHIMP_API_KEY?You must set MAILCHIMP_LIST_ID and MAILCHIMP_API_KEY}
: ${APPLICATION_SECRET?You must set APPLICATION_SECRET}
: ${ENVIRONMENT?You must set ENVIRONMENT=staging or production}

if [ -z "$APPLICATION_SECRET" ]; then
  echo 'Generating OV_APPLICATION_SECRET because you did not provide one'
  OV_APPLICATION_SECRET="$(openssl rand -base64 69 | tr -d '\n')"
else
  OV_APPLICATION_SECRET="$APPLICATION_SECRET"
fi

DIR="$(dirname "$0")"

# Set up DNS:
# 1. Create "$DNS_NAME", an ALIAS record pointed at the new Elastic Load Balancer

SMTP_HOST=email-smtp.us-east-1.amazonaws.com
SMTP_PORT=465
SMTP_TLS=no
SMTP_SSL=yes
MAIL_FROM=no-reply@overviewdocs.com

# Create SMTP secret
echo "Creating smtp secret..."
json=$(cat <<EOT
{
  "apiVersion": "v1",
  "kind": "Secret",
  "metadata": { "name": "smtp" },
  "type": "Opaque",
  "data": {
    "username": "$(echo -n "$SMTP_USERNAME" | base64)",
    "password": "$(echo -n "$SMTP_PASSWORD" | base64 | tr -d '\n')",
    "host": "$(echo -n "$SMTP_HOST" | base64)",
    "port": "$(echo -n "$SMTP_PORT" | base64)",
    "tls": "$(echo -n "$SMTP_TLS" | base64)",
    "ssl": "$(echo -n "$SMTP_SSL" | base64)",
    "mail_from": "$(echo -n "$MAIL_FROM" | base64)"
  }
}
EOT
)
echo $json | kubectl apply -f -

# Create Mailchimp secret
echo "Creating mailchimp secret..."
json=$(cat <<EOT
{
  "apiVersion": "v1",
  "kind": "Secret",
  "metadata": { "name": "mailchimp" },
  "type": "Opaque",
  "data": {
    "listId": "$(echo -n "$MAILCHIMP_LIST_ID" | base64)",
    "apiKey": "$(echo -n "$MAILCHIMP_API_KEY" | base64 | tr -d '\n')"
  }
}
EOT
)
echo $json | kubectl apply -f -

# Create play.application_secret
echo "Creating play.application_secret secret..."
json=$(cat <<EOT
{
  "apiVersion": "v1",
  "kind": "Secret",
  "metadata": { "name": "play" },
  "type": "Opaque",
  "data": {
    "application_secret": "$(echo -n "$OV_APPLICATION_SECRET" | base64 | tr -d '\n')"
  }
}
EOT
)
echo $json | kubectl apply -f -

apply_template() {
  cat "$DIR"/"$1" \
    | sed -e "s@ENVIRONMENT@$ENVIRONMENT@" \
    | kubectl apply -f -
}

apply_template kube2iam-ds.yml
apply_template kube-ingress-aws-controller.yml
apply_template skipper-ingress.yml
apply_template external-dns.yml

"$DIR"/../apply
